; Active 花よりダンゴ
; (C) RuRuRu
; 2022/03/17 1st Release

	.186


	HOOTPORT		equ		07e0h
	HP_PLAY			equ		00h
	HP_LOADPLAY		equ		01h
	HP_STOP			equ		02h

	HOOTFUNC		equ		07e8h
	HF_DISABLE		equ		80h
	HF_ENABLE		equ		81h
	HF_NORMAL		equ		82h
	HF_BURST		equ		83h

; ---- pc98generic only

	HOOTCTRL		equ		07d0h
	HC_SETADDR		equ		10h
	HC_GETADDR		equ		11h
	HC_LOADBGM		equ		20h
	HC_LOADBGM2		equ		21h



	HOOT_VECTOR		equ		7fh
	STACK_SIZE		equ		1024



code cseg

	rs 100h

main:
	cli

	mov dx, HOOTFUNC
	mov al, HF_DISABLE
	out dx, al

	mov ax, cs
	mov ss, ax
	mov sp, stack_end

	mov bx, prg_end
	add bx, 0fh
	shr bx, 4
	mov ah, 4ah
	int 21h


	mov bx, 2000h
	mov ah, 48h
	int 21h
	mov cs:[buf_seg], ax

	mov ds, cs:[buf_seg]
	xor dx, dx
	mov cx, -1
	mov bx, 5
	mov ah, 3fh
	int 21h
	jc _main_loop
	mov bx, ax
	mov ds:[bx].b, 0

	call exeload3
	jc _main_loop
	mov cs:[exe_seg], ax

	add cs:[vsyw_adr+2], ax
	add cs:[load_adr+2], ax
	add cs:[play_adr+2], ax
	add cs:[stop_adr+2], ax

	push ds
	mov dx, cs
	mov ds, dx
	mov dx, hootfunc
	mov ax, (2500h + HOOT_VECTOR)
	int 21h
	pop ds

	; Apply a patch to disable V-sync wait
	push ds
	lds di, cs:[vsyw_adr]
	mov al, 0cbh
	mov [di], al
	pop ds

	mov dx, HOOTFUNC
	mov al, HF_ENABLE
	out dx, al

	sti
_main_loop:
	hlt
	jmp _main_loop




hootfunc:
	push es
	push ds
	pusha

	mov ax, 34a8h
	add ax, cs:[exe_seg]
	mov ds, ax

	mov dx, HOOTPORT
	in al, dx
	cmp al, HP_PLAY
	je _hootfunc_play
	cmp al, HP_STOP
	je _hootfunc_stop
	jmp _hootfunc_end

_hootfunc_play:
	callf cs:[stop_adr]

	push ds
	mov ds, cs:[buf_seg]
	xor dx, dx
	mov cx, -1
	xor bx, bx
	mov ah, 3fh
	int 21h
	mov ax, ds
	pop ds

	push ax
	push dx
	callf cs:[load_adr]
	add sp, 4

	push 1
	callf cs:[play_adr]
	add sp, 2
	jmp _hootfunc_end

_hootfunc_stop:
	callf cs:[stop_adr]

_hootfunc_end:
	popa
	pop ds
	pop es
	iret



; in
;   ds:dx  exe_name
; out
;   ax  seg
exeload3:
	push es
	push ds
	pusha
	mov bp, sp

	mov bx, -1
	mov ah, 48h
	int 21h
	mov ah, 48h
	int 21h
	mov ss:[bp+0eh], ax	; ax
	jc _exeload3_err

	push ax
	push ax
	mov bx, sp
	mov ax, ss
	mov es, ax

	mov ax, 4b03h
	int 21h
	jc _exeload3_err_1

	clc
	jmp _exeload3_end

_exeload3_err_1:
	xchg ss:[bp+0eh], ax	; ax
	mov es, ax
	mov ah, 49h
	int 21h
_exeload3_err:
	stc

_exeload3_end:
	mov sp, bp
	popa
	pop ds
	pop es
	ret



	even

buf_seg: dw 0
exe_seg: dw 0

vsyw_adr: dw 0562h, 0a0bh
load_adr: dw 0fd2h, 0570h
play_adr: dw 12beh, 0570h
stop_adr: dw 131ch, 0570h

	even

	rs STACK_SIZE
stack_end:

prg_end:

	end
