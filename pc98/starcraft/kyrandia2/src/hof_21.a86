	.186


	HOOTPORT		equ		07e0h
	HP_PLAY			equ		00h
	HP_LOADPLAY		equ		01h
	HP_STOP			equ		02h

	HOOTFUNC		equ		07e8h
	HF_DISABLE		equ		80h
	HF_ENABLE		equ		81h
	HF_NORMAL		equ		82h
	HF_BURST		equ		83h

; ---- pc98generic only

	HOOTCTRL		equ		07d0h
	HC_SETADDR		equ		10h
	HC_GETADDR		equ		11h
	HC_LOADBGM		equ		20h
	HC_LOADBGM2		equ		21h



	HOOT_VECTOR		equ		7fh
	STACK_SIZE		equ		1024



code cseg

	rs 100h

main:
	cli

	mov dx, HOOTFUNC
	mov al, HF_DISABLE
	out dx, al

	mov ax, cs
	mov ss, ax
	mov sp, stack_end

	mov bx, prg_end
	add bx, 0fh
	shr bx, 4
	mov ah, 4ah
	int 21h


	mov bx, 1000h
	mov ah, 48h
	int 21h
	mov cs:[buf_seg], ax

	mov ds, ax
	xor dx, dx
	mov bx, 5
	call readstr
	jc _main_loop

	call exeload3
	jc _main_loop
	mov cs:[exe_seg], ax

	add cs:[mus_adr+2], ax
	add cs:[sedata_adr+2], ax
	add cs:[init_adr+2], ax
	add cs:[play_adr+2], ax
	add cs:[stop_adr+2], ax
	add cs:[se_adr+2], ax
	add cs:[pcm_init_adr+2], ax
	add cs:[pcm_play_adr+2], ax

	mov es, cs:[exe_seg]
	mov bx, 1f2fh
	mov ah, 4ah
	int 21h

	mov ax, cs:[exe_seg]
	add ax, 1e1eh
	mov ss, ax
	mov sp, 1010h

	mov ax, cs:[exe_seg]
	add ax, 1af9h
	mov ds, ax

	push 2
	callf cs:[init_adr]
	add sp, 2

;	callf cs:[pcm_init_adr]

	lds dx, cs:[sedata_adr]
	mov cx, -1
	mov bx, 6
	mov ah, 3fh
	int 21h


	mov ax, cs
	mov ds, ax
	mov dx, hootfunc
	mov ax, (2500h + HOOT_VECTOR)
	int 21h

	mov dx, HOOTFUNC
	mov al, HF_ENABLE
	out dx, al

	sti
_main_loop:
	mov ax, 9801h
	int 18h
	jmp _main_loop




hootfunc:
	sti
	push es
	push ds
	pusha

	mov ax, cs:[exe_seg]
	add ax, 1af9h
	mov ds, ax

	mov dx, HOOTPORT
	in al, dx
	cmp al, HP_PLAY
	je _hootfunc_play
	cmp al, HP_STOP
	je _hootfunc_stop
	jmp _hootfunc_end

_hootfunc_play:
	mov dx, (HOOTPORT+4)
	in ax, dx
	or ax, ax
	jnz _hootfunc_play_pcm

	mov dx, (HOOTPORT+2)
	in ax, dx
	or ah, ah
	jnz _hootfunc_play_se

	push ax
	callf cs:[stop_adr]
	pop ax

	lds dx, cs:[mus_adr]
	mov cx, -1
	xor bx, bx
	mov ah, 3fh
	int 21h

	callf cs:[play_adr]
	jmp _hootfunc_end

_hootfunc_play_se:
	xor ah, ah
	push ax
	callf cs:[se_adr]
	add sp, 2
	jmp _hootfunc_end

_hootfunc_play_pcm:
	mov ds, cs:[buf_seg]
	xor dx, dx
	mov cx, -1
	xor bx, bx
	mov ah, 3fh
	int 21h

	push 2
	push 30h
	push ds
	push dx
	callf cs:[pcm_play_adr]
	add sp, 8
	jmp _hootfunc_end

_hootfunc_stop:
	callf cs:[stop_adr]

_hootfunc_end:
	popa
	pop ds
	pop es
	iret



readstr:
	pusha
	mov cx, -1
	mov ah, 3fh
	int 21h
	jc _readstr_end
	or ax, ax
	stc 
	jz _readstr_end
	mov bx, dx
	add bx, ax
	mov ds:[bx].b, 0
	clc
_readstr_end:
	popa
	ret


exeload3:
	push es
	push ds
	pusha
	mov bp, sp

	mov bx, -1
	mov ah, 48h
	int 21h
	mov ah, 48h
	int 21h
	mov ss:[bp+0eh], ax	; ax
	jc _exeload3_err

	push ax
	push ax
	mov bx, sp
	mov ax, ss
	mov es, ax

	mov ax, 4b03h
	int 21h
	jc _exeload3_err_1

	clc
	jmp _exeload3_end

_exeload3_err_1:
	xchg ss:[bp+0eh], ax	; ax
	mov es, ax
	mov ah, 49h
	int 21h
_exeload3_err:
	stc

_exeload3_end:
	mov sp, bp
	popa
	pop ds
	pop es
	ret



	even

buf_seg: dw 0
exe_seg: dw 0

mus_adr: dw 1eefh, 1bbch
sedata_adr: dw 02efh, 1bbch
init_adr: dw 0cb3h, 0c20h
play_adr: dw 0ac8h, 0c20h
stop_adr: dw 0c85h, 0c20h
se_adr: dw 0e3ah, 0c20h
pcm_init_adr: dw 003eh, 0b21h
pcm_play_adr: dw 0162h, 0b21h

	even

	rs STACK_SIZE
stack_end:

prg_end:

	end
