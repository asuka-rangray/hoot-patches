	.186


	HOOTPORT		equ		07e0h
	HP_PLAY			equ		00h
	HP_LOADPLAY		equ		01h
	HP_STOP			equ		02h

	HOOTFUNC		equ		07e8h
	HF_DISABLE		equ		80h
	HF_ENABLE		equ		81h
	HF_NORMAL		equ		82h
	HF_BURST		equ		83h

; ---- pc98generic only

	HOOTCTRL		equ		07d0h
	HC_SETADDR		equ		10h
	HC_GETADDR		equ		11h
	HC_LOADBGM		equ		20h
	HC_LOADBGM2		equ		21h


	HOOT_VECTOR		equ		7fh
	STACK_SIZE		equ		1024


	DRV_SEG			equ		1000h
	DS_SEG			equ		0000h
	BASE_OFS		equ		0f000h
	MUS_OFS			equ		0d604h

	INIT			equ		01e3h

	PLAY			equ		0d80h
	STOP			equ		0e17h


code cseg

main:
	cli

	mov dx, HOOTFUNC
	mov al, HF_DISABLE
	out dx, al

	mov ax, cs
	mov ss, ax
	mov sp, stack_end

	mov ax, 3000h
	mov ds, ax

	mov ds:[24h].w, _main_0
	mov ds:[26h], cs

	push ds
	push 0
	retf

_main_0:
	mov ax, cs
	mov ds, ax
	xor si, si
	mov ax, DRV_SEG
	mov es, ax
	mov di, BASE_OFS
	mov cx, code_end
	rep movsb

	push es
	push (_main_1 + BASE_OFS)
	retf

_main_1:
	mov ax, DS_SEG
	mov ds, ax
	mov es, ax
	mov ss, ax
	mov sp, 1000h

	sti

	mov bx, 13h
	mov cs:[18bh].b, 0c3h
	call bx

	mov dx, HOOTCTRL+2
	xor ax, ax
	out dx, al

	add dx, 2
	mov ax, MUS_OFS
	out dx, ax

	add dx, 2
	mov ax, DS_SEG
	out dx, ax

	mov dx, HOOTCTRL
	mov al, HC_SETADDR
	out dx, al

	xor ax, ax
	mov ds, ax
	mov bx, (HOOT_VECTOR * 4)
	mov ds:[bx].w, (hootfunc + BASE_OFS)
	mov ds:[bx+2], cs


	mov dx, HOOTFUNC
	mov al, HF_ENABLE
	out dx, al

	sti
_main_loop:
	mov ax, 9801h
	int 18h
	jmp _main_loop


hootfunc:
	push es
	push ds
	pusha

	sti

	mov ax, DS_SEG
	mov ds, ax
	mov es, ax

	mov dx, HOOTPORT
	in al, dx

	cmp al, HP_PLAY
	jne _hootfunc_loadplay

_hootfunc_play:
	mov ax, 00ffh
	mov bx, STOP
	call bx
	jmp _hootfunc_end


_hootfunc_loadplay:
	cmp al, HP_LOADPLAY
	jne _hootfunc_stop

	mov bx, PLAY
	call bx
	jmp _hootfunc_end

_hootfunc_stop:
	cmp al, HP_STOP
	jne _hootfunc_end

	mov ax, 00ffh
	mov bx, STOP
	call bx

_hootfunc_end:
	popa
	pop ds
	pop es
	iret

code_end:

	even

	rs STACK_SIZE
stack_end:

prg_end:

	end
